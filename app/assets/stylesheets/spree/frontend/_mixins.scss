
/*  
@mixin cover-background ()
Creates a full width background image on an element. 

-Parameters:
--Required:
$img-uri: URI of image you want to use as the background 

--Optional:
$background-top:  Defaults to "center - sets the "top" value of the background position
$background-left: Defaults to "center - sets the "left" value of the background position.
$background-attachment: Defaults to "fixed" - allows you to specify background attachment.

*/
@mixin cover-background($img-uri, $background-top:"center", $background-left:"center", $background-attachment:"fixed") {
  background: asset-url($img-uri) no-repeat unquote($background-top) unquote($background-left) unquote($background-attachment); 
  -webkit-background-size: cover;
  -moz-background-size: cover;
  -o-background-size: cover;
  background-size: cover;  
}

//maintain an elements aspect ratio

@mixin aspect-ratio($width, $height) {
  position: relative;
  &:before {
    display: block;
    content: "";
    width: 100%;
    padding-top: ($height / $width) * 100%;
  }
  > .box {
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
  }
}

@mixin transition($args...) {
  -webkit-transition: $args;
  -moz-transition: $args;
  -ms-transition: $args;
  -o-transition: $args;
  transition: $args;
}

@mixin text-shadow( $top: 3px, $left: 3px, $blur: 3px , $colour: #333 ) {
  -webkit-text-shadow:$top $left $blur $colour; 
  -moz-text-shadow:$top $left $blur $colour; 
  -o-text-shadow:$top $left $blur $colour; 
  text-shadow:$top $left $blur $colour; 
}


@mixin box-shadow($top: 3px, $left: 3px, $blur: 4px, $colour: #444, $inset:"") {
  -webkit-box-shadow: #{$inset} $top $left $blur $colour;
  -moz-box-shadow:  #{$inset} $top $left $blur $colour;
  box-shadow: #{$inset} $top $left $blur $colour;
}

@mixin rounded-corners($tl : 4px, $tr : 4px, $br: 4px, $bl: 4px) {
  -webkit-border-radius:$tl $tr $br $bl;
  -moz-border-radius:$tl $tr $br $bl;
  -o-border-radius:$tl $tr $br $bl;
  border-radius:$tl $tr $br $bl;
}

@mixin rotate( $val: -2deg ) {
  -webkit-transform: rotate($val);
  -moz-transform: rotate($val);
  -ms-transform: rotate($val);
  -o-transform: rotate($val);
  transform: rotate($val);
}

@mixin transform($val) {
  -webkit-transform: $val;
  -moz-transform: $val;
  -ms-transform: $val;
  transform: $val;
}

@mixin transform-origin($val) {
  -webkit-transform-origin: $val;
  -moz-transform-origin: $val;
  -ms-transform-origin: $val;
  transform-origin: $val;
}

@mixin transform-style($val) {
  -webkit-transform-style: $val;
  -moz-transform-style: $val;
  -ms-transform-style: $val;
  transform-style: $val;
}

@mixin placeholder {
  ::-webkit-input-placeholder {@content}
  :-moz-placeholder           {@content}
  ::-moz-placeholder          {@content}
  :-ms-input-placeholder      {@content}  
}

@mixin backface-visibility ($arguments) {
  -webkit-backface-visibility: $arguments;
     -moz-backface-visibility: $arguments;
      -ms-backface-visibility: $arguments;
       -o-backface-visibility: $arguments;
          backface-visibility: $arguments;
}

@mixin clearfix {
  &:after {
    content: "";
    display: table;
    clear: both;
  }
}

@mixin column($percentage, $float-direction:left) {
  width: 100% * $percentage;
  float: $float-direction;
}

@mixin vertical-align($position: relative) {
  position: $position;
  top: 50%;
  -webkit-transform: translateY(-50%);
  -ms-transform: translateY(-50%);
  transform: translateY(-50%);
}
